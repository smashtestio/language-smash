scopeName: 'source.smash'
name: 'smash'
fileTypes: ['smash']
foldingStartMarker: '^(\\s*)$'
foldingStopMarker: '^(\\s*)$'
patterns: [
    {
        begin: '^(\\s*)\\.\\.(\\s*)$'
        end: '^(\\s*)$'
        name: 'entity.name.function.smash'
        patterns: [
            { include: '$self' }
        ]
    }
    {
        match: '^.*\\s+\\.\\.(\\s+|$).*$'
        name: 'entity.name.function.smash'
        patterns: [
            { include: '$self' }
        ]
    }
    {
        match: '^.*\\s+(\\$|~)(\\s+|$).*$'
        name: 'markup.italic.smash'
        patterns: [
            { include: '$self' }
        ]
    }
    {
        match: '^\\s*(((\\-T|\\-M|\\-|\\+|\\.\\.|\\#|\\~|\\$|\\.\\?)\\s+)*)(\\*{1,3}\\s+)?((\'([^\\\\\']|(\\\\\\\\)*\\\\.)*\'|"([^\\\\"]|(\\\\\\\\)*\\\\.)*"|.*?)+?)((\\s+(\\-T|\\-M|\\-|\\+|\\.\\.|\\#|\\~|\\$|\\.\\?))*)(\\s+(?=\\{[^\\}]*$)|\\s*(\\/\\/.*$)|\\s*$)'
        captures:
            1: name: 'keyword.control.identifier.smash'
            5: {
                patterns: [
                    {
                        begin: '\''
                        end: '\''
                        name: 'string.quoted.single.smash'
                        patterns: [
                            {
                                match: '\\\\(\\\\|\'|"|\\[|\\]|n|r|t|b|f)',
                                name: 'constant.character.escape.smash'
                            }
                            {
                                match: '\\{\\{[^\\{\\}\\\\]+\\}\\}|\\{[^\\{\\}\\\\]+\\}'
                                name: 'variable.smash'
                            }
                        ]
                    }
                    {
                        begin: '\"'
                        end: '\"'
                        name: 'string.quoted.double.smash'
                        patterns: [
                            {
                                match: '\\\\(\\\\|\'|"|\\[|\\]|n|r|t|b|f)',
                                name: 'constant.character.escape.smash'
                            }
                            {
                                match: '\\{\\{[^\\{\\}\\\\]+\\}\\}|\\{[^\\{\\}\\\\]+\\}'
                                name: 'variable.smash'
                            }
                        ]
                    }
                    {
                        begin: '\\['
                        end: '\\]'
                        name: 'string.quoted.other.smash'
                        patterns: [
                            {
                                match: '\\\\(\\\\|\'|"|\\[|\\]|n|r|t|b|f)',
                                name: 'constant.character.escape.smash'
                            }
                            {
                                match: '\\{\\{[^\\{\\}\\\\]+\\}\\}|\\{[^\\{\\}\\\\]+\\}'
                                name: 'variable.smash'
                            }
                        ]
                    }
                    {
                        match: '\\{\\{[^\\{\\}\\\\]+\\}\\}|\\{[^\\{\\}\\\\]+\\}'
                        name: 'variable.smash'
                    }
                    {
                        match: '(([Bb][Ee][Ff][Oo][Rr][Ee]|[Aa][Ff][Tt][Ee][Rr])\\s+[Ee][Vv][Ee][Rr][Yy]\\s+[Bb][Rr][Aa][Nn][Cc][Hh])|(([Bb][Ee][Ff][Oo][Rr][Ee]|[Aa][Ff][Tt][Ee][Rr])\\s+[Ee][Vv][Ee][Rr][Yy]\\s+[Ss][Tt][Ee][Pp])|(([Bb][Ee][Ff][Oo][Rr][Ee]|[Aa][Ff][Tt][Ee][Rr])\\s+[Ee][Vv][Ee][Rr][Yy][Tt][Hh][Ii][Nn][Gg])'
                        name: 'entity.name.function.hook.smash'
                    }
                ]
            }
            11: name: 'keyword.control.identifier.smash'
            15: name: 'comment.line.double-slash.smash'
    }
    {
        begin: '{[^\\{\\}]*\\n'
        end: '\\s*}'
        name: 'codeblock.smash'
        patterns: [
            { include: 'source.js' }
        ]
    }
]
